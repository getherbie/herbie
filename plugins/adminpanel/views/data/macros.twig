{% macro input(name, value, type, size) %}
    <input type="{{ type|default('text') }}" name="{{ name }}" value="{{ value|e }}" size="{{ size|default(20) }}" />
{% endmacro %}


{% macro element(config, index, item) %}

    {% import _self as macro %}

    <div class="pure-control-wrap">
        {% for key,c in config %}
            <div class="pure-g" data-type="{{ c.type }}">
                <div class="pure-u-1 pure-u-md-1-5">
                    <label for="name">{{ c.label }}</label>
                </div>
                <div class="pure-u-1 pure-u-md-4-5">

                    {% if c.type == 'checkbox' %}
                        <input name="data[{{ index }}][{{ key }}]" type="checkbox" {{ macro.checked(attribute(item, key), 1) }} value="1">
                    {% endif %}

                    {% if c.type == 'checkboxlist' %}
                        {% for checkboxlistkey, checkboxlistvalue in c.items %}
                            <input name="data[{{ index }}][{{ key }}][]" type="checkbox" {{ macro.checked2(attribute(item, key), checkboxlistkey) }} value="{{ checkboxlistkey }}"> {{ checkboxlistvalue }}
                        {% endfor %}
                    {% endif %}

                    {% if c.type == 'radiolist' %}
                        {% for radiokey, radiovalue in c.items %}
                            <input name="data[{{ index }}][{{ key }}]" type="radio" {{ macro.checked(attribute(item, key), radiokey) }} value="{{ radiokey }}"> {{ radiovalue }}
                        {% endfor %}
                    {% endif %}

                    {% if c.type == 'dropdownlist' %}
                        <select name="data[{{ index }}][{{ key }}]">
                            {% for optionkey, optionvalue in c.items %}
                                <option value="{{ optionkey }}" {{ macro.selected(optionkey, attribute(item, key)) }}>{{ optionvalue }}</option>
                            {% endfor %}
                        </select>
                    {% endif %}

                    {% if c.type == 'text' %}
                        <input name="data[{{ index }}][{{ key }}]" class="pure-input-1" type="text" value="{{ attribute(item, key) }}" placeholder="{{ c.placeholder }}">
                    {% endif %}

                    {% if c.type == 'textarea' %}
                        <textarea name="data[{{ index }}][{{ key }}]" class="pure-input-1" type="text">{{ attribute(item, key) }}</textarea>
                    {% endif %}

                    {% if c.type == 'multitext' %}
                        <div data-index="{{ index }}" data-key="{{ key }}" class="multitext multitext-{{ key }}" style="display:inline-block">
                            {% set array = attribute(item, key) %}
                            {% if array is empty %}
                                {% set array = {"0":""} %}
                            {% endif %}
                            {% for mtindex,mtitem in array %}
                                {{ macro.multitext_input(index, key, mtitem, mtindex) }}
                            {% endfor %}
                        </div>
                    {% endif %}

                    {% if c.type == 'matrix' %}
                        {{ macro.matrix(index, key, c, attribute(item, key)) }}
                    {% endif %}

                    {% if c.hint %}
                        <div class="hint">{{ c.hint }}</div>
                    {% endif %}

                </div>
            </div>
        {% endfor %}
        <a class="add" href="#"><i class="fa fa-plus-circle"></i> {{ translate('adminpanel', 'Add') }}</a> &nbsp; <a class="delete" href="#"><i class="fa fa-minus-circle"></i> {{ translate('adminpanel', 'Delete') }}</a>
    </div>
{% endmacro %}


{% macro multitext_input(index, key, value, add) %}
    <div class="multitext-input">
        <input name="data[{{ index }}][{{ key }}][]" class="" type="text" value="{{ value }}">
        {% if add == 0 %}
            <a href="#" class="add-multitext"><i class="fa fa-plus-circle"></i></a>
        {% else %}
            <a href="#" class="remove-multitext"><i class="fa fa-minus-circle"></i></a>
        {% endif %}
    </div>
{% endmacro %}


{% macro matrix(dataindex, datatype, config, values) %}

    {% if dataindex starts with '_index_' %}
        {# operator == does not work #}
        {% set values = {"__index__":""} %}
    {% endif %}

    {# key: arrayindex value: key-value-pairs #}
    <div class="matrix-rows" data-index="{{ dataindex }}" data-count="{{ values|length }}">
    {% for key,value in values %}
        {% set index = loop.index0 %}
        {% if key starts with '__index__' %}
            {% set index = '__index__' %}
        {% endif %}
        <div class="matrix-row">
            {% for mkey, mconfig in config.config %}
                {% if mconfig.type == 'text' %}
                    <input name="data[{{ dataindex }}][{{ datatype }}][{{ index }}][{{ mkey }}]" class="" type="text" value="{{ attribute(value, mkey) }}" placeholder="{{ mconfig.placeholder }}">
                {% endif %}
            {% endfor %}
            <a href="#" class="remove-matrix remove-matrix-{{ index }}"><i class="fa fa-minus-circle"></i></a>
        </div>
    {% endfor %}
    </div>
    <a href="#" class="add-matrix"><i class="fa fa-plus-circle"></i></a>

{% endmacro %}


{% macro checked(value, checked) %}
    {% if value == checked %}
        checked="checked"
    {% endif %}
{% endmacro %}


{% macro checked2(value, checked) %}
    {% if checked in value %}
        checked="checked"
    {% endif %}
{% endmacro %}


{% macro selected(value, selected) %}
    {% if value == selected %}
        selected="selected"
    {% endif %}
{% endmacro %}
